{"version":3,"sources":["pages/components/movie-list/movies-list-categories/MovieDetail.module.css","pages/components/movie-list/original/MovieDetailOriginal.module.css","pages/search/result-list/ResultMovieDetail.module.css","pages/search/search-form/SearchForm.module.css","pages/components/nav-bar/NavBar.module.css","pages/search/result-list/ResultList.module.css","pages/components/banner/Banner.module.css","pages/components/movie-list/MovieList.module.css","pages/components/movie-list/movies-list-categories/MoviesListCategories.module.css","pages/components/movie-list/original/OriginalList.module.css","pages/components/movie-list/movies-list-categories/movie-item/MovieItem.module.css","pages/components/movie-list/original/movie-item/OriginalItem.module.css","pages/search/result-list/movie-item/ResultItem.module.css","pages/components/banner/Banner.jsx","pages/components/movie-list/movies-list-categories/movie-item/MovieItem.jsx","pages/components/movie-list/movies-list-categories/MovieDetail.jsx","pages/components/movie-list/movies-list-categories/MoviesListCategories.jsx","pages/components/movie-list/original/movie-item/OriginalItem.jsx","pages/components/movie-list/original/MovieDetailOriginal.jsx","pages/components/movie-list/original/OriginalList.jsx","pages/components/movie-list/MovieList.jsx","pages/components/nav-bar/NavBar.jsx","pages/browse/Browse.jsx","pages/search/result-list/ResultMovieDetail.jsx","pages/search/result-list/movie-item/ResultItem.jsx","pages/search/result-list/ResultList.jsx","pages/search/search-form/SearchForm.jsx","pages/search/Search.jsx","App.js","index.js"],"names":["module","exports","i","Banner","useState","movieOnBanner","setmovieOnBanner","baseUrl","setBaseUrl","backdropSizes","setBackdropSizes","useEffect","movieArray","endPoint","fetch","response","response2","json","data","configData","results","Math","floor","random","length","getRandomMovie","images","base_url","backdrop_sizes","console","log","messsage","sendRequest","backdropLink","backdrop_path","className","styles","banner","src","alt","title","name","overview","MovieItem","props","image","item","onClick","onGetMovieId","id","MovieDetail","videoId","setVideoID","setBackdropLink","movieSelected","setMovieSelected","error","setError","apiKey","movieId","response3","ok","Error","videoData","movieData","site","type","key","voteAverage","Number","vote_average","toFixed","original_title","release_date","vote_count","opts","height","width","playerVars","autoplay","MoviesListCategories","selecedtMovieId","setSelectedMovieId","showMovieDetail","setShowMovieDetail","a","items","b","categorie","c","d","e","bb","cc","dd","getMovieId","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","map","x","p","OriginalItem","poster_path","MovieDetailOriginal","OriginalList","MovieList","setData","loading","setLoading","endPoints","fetchNetflixOriginals","fetchConfig","dataObj","dataJson","library","add","faSearch","NavBar","navigate","useNavigate","offset","setOffset","componentMounted","useRef","window","addEventListener","current","scrollY","navbar","icon","Browse","ResultMovieDetail","ResultItem","ResultList","setMovieData","query","keyWord","SearchForm","inputRef","onKeyDown","value","onReceiveKeyWord","search","ref","placeholder","btn","Search","searchKey","setSearchKey","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcaac08b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-detail\":\"MovieDetail_movie-detail__1UjvV\",\"movie-detail-info\":\"MovieDetail_movie-detail-info__zXxwN\",\"overview\":\"MovieDetail_overview__1QOQb\",\"movie-detail-video\":\"MovieDetail_movie-detail-video__1CZi9\",\"error\":\"MovieDetail_error__rGlgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-detail\":\"MovieDetailOriginal_movie-detail__1pGDt\",\"movie-detail-info\":\"MovieDetailOriginal_movie-detail-info__1eH5Q\",\"overview\":\"MovieDetailOriginal_overview__1SZpC\",\"movie-detail-video\":\"MovieDetailOriginal_movie-detail-video__2w6LR\",\"error\":\"MovieDetailOriginal_error__XdTWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-detail\":\"ResultMovieDetail_movie-detail__2fNJu\",\"movie-detail-info\":\"ResultMovieDetail_movie-detail-info__39zug\",\"overview\":\"ResultMovieDetail_overview__1aCA2\",\"movie-detail-video\":\"ResultMovieDetail_movie-detail-video__bNgYY\",\"error\":\"ResultMovieDetail_error__3B3c4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchForm_search__LmsJn\",\"search-form\":\"SearchForm_search-form__1OlLj\",\"icon\":\"SearchForm_icon__JBbAx\",\"btn\":\"SearchForm_btn__3lioi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__B4Suv\",\"icon\":\"NavBar_icon__3nAU7\",\"black-background\":\"NavBar_black-background__2jfl7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-list-categorie\":\"ResultList_movie-list-categorie__166Uy\",\"movie-list-items\":\"ResultList_movie-list-items__3wx0B\",\"loading\":\"ResultList_loading__2T5DX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__3vRgK\",\"title\":\"Banner_title__3Y5Z3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-list\":\"MovieList_movie-list__2j010\",\"loading\":\"MovieList_loading__1UBO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-list-categorie\":\"MoviesListCategories_movie-list-categorie__2z-iS\",\"movie-list-items\":\"MoviesListCategories_movie-list-items__oo0J7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-list-categorie\":\"OriginalList_movie-list-categorie__h7yDQ\",\"movie-list-items\":\"OriginalList_movie-list-items__6vN5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-item\":\"MovieItem_movie-item__3LlrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-item\":\"OriginalItem_movie-item__1shqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie-item\":\"ResultItem_movie-item__1Mg77\"};","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./Banner.module.css\";\r\n\r\nconst Banner = () => {\r\n  /*===GET URL OF IMAGE====*/\r\n  const [movieOnBanner, setmovieOnBanner] = useState({});\r\n  const [baseUrl, setBaseUrl] = useState(\"\");\r\n  const [backdropSizes, setBackdropSizes] = useState(\"\");\r\n  /*===========SET END POINT============*/\r\n  const endPoint =\r\n    \"https://api.themoviedb.org/3/discover/tv?api_key=748ac253470023678c66e35ea82c9bab&with_network=123\";\r\n  /*===========SEND REQUEST============*/\r\n  useEffect(() => {\r\n    let movieArray = [];\r\n    const sendRequest = async (endPoint) => {\r\n      try {\r\n        const response = await fetch(endPoint);\r\n        const response2 = await fetch(\r\n          \"https://api.themoviedb.org/3/configuration?api_key=748ac253470023678c66e35ea82c9bab\"\r\n        );\r\n        const data = await response.json();\r\n        const configData = await response2.json();\r\n        movieArray = data.results;\r\n        /*===========GET RANDOM MOVIE============*/\r\n        const getRandomMovie = () => {\r\n          return movieArray[Math.floor(Math.random() * movieArray.length - 1)];\r\n        };\r\n        /*===========SET IMAGE STATE============*/\r\n        setmovieOnBanner(getRandomMovie());\r\n        setBaseUrl(configData.images.base_url);\r\n        setBackdropSizes(configData.images.backdrop_sizes[3]);\r\n      } catch (e) {\r\n        console.log(e.messsage);\r\n      }\r\n    };\r\n    sendRequest(endPoint);\r\n  }, []);\r\n  /*===========BUILD THE IMAGE LINK============*/\r\n  const backdropLink = `${baseUrl}${backdropSizes}${movieOnBanner.backdrop_path}`;\r\n\r\n  return (\r\n    <div className={styles.banner}>\r\n      <img src={backdropLink} alt=\"\" />\r\n      <div className={styles.title}>\r\n        <h1>{movieOnBanner.name}</h1>\r\n        <button>Play</button>\r\n        <button>My List</button>\r\n        <p>{movieOnBanner.overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport styles from \"./MovieItem.module.css\";\r\n\r\nconst MovieItem = (props) => {\r\n  /*===========GET BACKDROP IMAGE LINK============*/\r\n  const image = `${props.baseUrl}${props.backdropSizes}${props.item.backdrop_path}`;\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        // GET ID OF MOVIE WHEN CLICK\r\n        props.onGetMovieId(props.item.id);\r\n      }}\r\n      className={styles[\"movie-item\"]}\r\n    >\r\n      <img src={image} alt={props.title} />\r\n    </div>\r\n  );\r\n};\r\nexport default MovieItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport styles from \"./MovieDetail.module.css\";\r\n\r\nconst MovieDetail = (props) => {\r\n  /*===========STATE AND APIKEY============*/\r\n  const [videoId, setVideoID] = useState(\"\");\r\n  const [backdropLink, setBackdropLink] = useState(\"\");\r\n  const [movieSelected, setMovieSelected] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const baseUrl = \"https://api.themoviedb.org/3\";\r\n  const apiKey = \"748ac253470023678c66e35ea82c9bab\";\r\n  /*===========SEND REQUEST============*/\r\n  useEffect(() => {\r\n    const endPoint = `${baseUrl}/movie/${props.movieId}/videos?api_key=${apiKey}&`;\r\n    const sendRequest = async (endPoint) => {\r\n      try {\r\n        const response = await fetch(endPoint);\r\n        /*===========GET CONFIGURATION============*/\r\n        const response2 = await fetch(\r\n          \"https://api.themoviedb.org/3/configuration?api_key=748ac253470023678c66e35ea82c9bab\"\r\n        );\r\n        const response3 = await fetch(\r\n          `${baseUrl}/movie/${props.movieId}?api_key=${apiKey}&`\r\n        );\r\n        /*==========CHECK ERROR=============*/\r\n        if (!response.ok || !response2.ok || !response3) {\r\n          setError(true);\r\n          throw new Error(\"Error\");\r\n        }\r\n        const videoData = await response.json();\r\n        const configData = await response2.json();\r\n        const movieData = await response3.json();\r\n        /*==========CHECK BACKDROP IMAGE=============*/\r\n        if (!movieData.backdrop_path) {\r\n          setError(true);\r\n          throw new Error(\"image not found\");\r\n        }\r\n        setMovieSelected(movieData);\r\n        /*============IF VIDEO NOT FOUND SHOW IMAGE===========*/\r\n        for (let i = 0; i < videoData.results.length; i++) {\r\n          if (\r\n            videoData.results[i].site === \"YouTube\" &&\r\n            videoData.results[i].type === \"Trailer\"\r\n          ) {\r\n            setVideoID(videoData.results[i].key);\r\n            break;\r\n          } else if (\r\n            videoData.results[i].site === \"YouTube\" &&\r\n            videoData.results[i].type === \"Teaser\"\r\n          ) {\r\n            setVideoID(videoData.results[i].key);\r\n            break;\r\n          } else {\r\n            setBackdropLink(\r\n              `${configData.images.base_url}${configData.images.backdrop_sizes[2]}${movieData.backdrop_path}`\r\n            );\r\n            break;\r\n          }\r\n        }\r\n        /*============IF DO NOT HAVE VIDEO THEN SHOW IMAGE===========*/\r\n        if (videoData.results.length === 0) {\r\n          setBackdropLink(\r\n            `${configData.images.base_url}${configData.images.backdrop_sizes[2]}${movieData.backdrop_path}`\r\n          );\r\n        }\r\n      } catch (e) {\r\n        console.log(e.messsage);\r\n      }\r\n    };\r\n    sendRequest(endPoint);\r\n    return () => {\r\n      setVideoID(\"\");\r\n      setBackdropLink(\"\");\r\n      setMovieSelected({});\r\n      setError(false);\r\n    };\r\n  }, [props.movieId]);\r\n  /*==========YOUTUBE SETTING=============*/\r\n  const opts = {\r\n    height: \"300\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  /*===========ROUND THE VOTE AVERAGE============*/\r\n  const voteAverage = Number(movieSelected.vote_average).toFixed(1);\r\n  return (\r\n    <div className={styles[\"movie-detail\"]}>\r\n    {/* SHOW ERROR */}\r\n      {error && (\r\n        <div className={styles.error}>\r\n          This movie not in database, please choose another movie\r\n        </div>\r\n      )}\r\n      {/* SHOW VIDEO AND INFOMATION */}\r\n      <div className={styles[\"movie-detail-info\"]}>\r\n        <h2>{movieSelected.original_title}</h2>\r\n        <p>Release Date: {movieSelected.release_date}</p>\r\n        <p>\r\n          Vote:&nbsp;\r\n          {movieSelected.vote_count}/{voteAverage}\r\n        </p>\r\n        <p className={styles.overview}>{movieSelected.overview}</p>\r\n      </div>\r\n      <div className={styles[\"movie-detail-video\"]}>\r\n        {backdropLink !== \"\" && <img src={backdropLink} alt=\"\" />}\r\n        {videoId !== \"\" && <YouTube videoId={videoId} opts={opts} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { useState } from \"react\";\r\nimport MovieItem from \"./movie-item/MovieItem\";\r\nimport MovieDetail from \"./MovieDetail\";\r\nimport styles from \"./MoviesListCategories.module.css\";\r\n\r\nconst MoviesListCategories = (props) => {\r\n  /*==========STATE OF SELECTED MOVIE=============*/\r\n  const [selecedtMovieId, setSelectedMovieId] = useState(0);\r\n  const [showMovieDetail, setShowMovieDetail] = useState(false);\r\n  /*=========COPY OBJECT==============*/\r\n  const a = { ...props.items };\r\n  const b = { ...a[props.categorie] };\r\n  const c = { ...b.results };\r\n  const d = { ...c };\r\n  let movieArray = [];\r\n  for (let i in d) {\r\n    const e = { ...d[i] };\r\n    movieArray[i] = { ...e };\r\n  }\r\n  const bb = { ...a[\"fetchConfig\"] };\r\n  const cc = { ...bb.images };\r\n  const dd = { ...cc.backdrop_sizes };\r\n  /*===========GENRES ARRAY============*/\r\n  const genres = {\r\n    fetchTrending: \"Xu hướng\",\r\n    fetchTopRated: \"Xếp hạng cao\",\r\n    fetchActionMovies: \"Hành động\",\r\n    fetchComedyMovies: \"Hài\",\r\n    fetchHorrorMovies: \"Kinh dị\",\r\n    fetchRomanceMovies: \"Lãng mạn\",\r\n    fetchDocumentaries: \"Tài liệu\",\r\n  };\r\n  /*===========IF CLICK OTHER MOVIE SHOW DETAIL OF OTHER MOVIE, IF CLICK MOVIE AGAIN CLOSE DETAIL BOX============*/\r\n  const getMovieId = (movieId) => {\r\n    if (movieId !== 0) {\r\n      setShowMovieDetail(true);\r\n      setSelectedMovieId(movieId);\r\n    }\r\n    if (movieId === selecedtMovieId) {\r\n      setShowMovieDetail(false);\r\n      setSelectedMovieId(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles[\"movie-list-categorie\"]}>\r\n      <h3>{genres[props.categorie]}</h3>\r\n      <div className={styles[\"movie-list-items\"]}>\r\n        {/* SHOW MOVIE ITEM */}\r\n        {movieArray.map((x) => {\r\n          const p = { ...x };\r\n          return p.backdrop_path ? (\r\n            <MovieItem\r\n              key={p.id}\r\n              item={p}\r\n              baseUrl={cc.base_url}\r\n              backdropSizes={dd[0]}\r\n              onGetMovieId={getMovieId}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </div>\r\n      {/* SHOW MOVIE DETAIL */}\r\n      {showMovieDetail && <MovieDetail movieId={selecedtMovieId} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesListCategories;\r\n","import React from \"react\";\r\nimport styles from \"./OriginalItem.module.css\";\r\n\r\nconst OriginalItem = (props) => {\r\n  /*===========GET BACKDROP IMAGE LINK============*/\r\n  const image = `${props.baseUrl}${props.backdropSizes}${props.item.poster_path}`;\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        // GET ID OF MOVIE WHEN CLICK\r\n        props.onGetMovieId(props.item.id);\r\n      }}\r\n      className={styles[\"movie-item\"]}\r\n    >\r\n      <img src={image} alt={props.title} />\r\n    </div>\r\n  );\r\n};\r\nexport default OriginalItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport styles from \"./MovieDetailOriginal.module.css\";\r\n\r\nconst MovieDetailOriginal = (props) => {\r\n  /*===========STATE AND APIKEY============*/\r\n  const [videoId, setVideoID] = useState(\"\");\r\n  const [backdropLink, setBackdropLink] = useState(\"\");\r\n  const [movieSelected, setMovieSelected] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const baseUrl = \"https://api.themoviedb.org/3\";\r\n  const apiKey = \"748ac253470023678c66e35ea82c9bab\";\r\n  /*===========SEND REQUEST============*/\r\n  useEffect(() => {\r\n    const endPoint = `${baseUrl}/movie/${props.movieId}/videos?api_key=${apiKey}&`;\r\n    const sendRequest = async (endPoint) => {\r\n      try {\r\n        const response = await fetch(endPoint);\r\n        /*===========GET CONFIGURATION============*/\r\n        const response2 = await fetch(\r\n          \"https://api.themoviedb.org/3/configuration?api_key=748ac253470023678c66e35ea82c9bab\"\r\n        );\r\n        const response3 = await fetch(\r\n          `${baseUrl}/movie/${props.movieId}?api_key=${apiKey}&`\r\n        );\r\n        /*==========CHECK ERROR=============*/\r\n        if (!response.ok || !response2.ok || !response3) {\r\n          setError(true);\r\n          throw new Error(\"Error\");\r\n        }\r\n        const videoData = await response.json();\r\n        const configData = await response2.json();\r\n        const movieData = await response3.json();\r\n        /*==========CHECK BACKDROP IMAGE=============*/\r\n        if (!movieData.backdrop_path) {\r\n          setError(true);\r\n          throw new Error(\"image not found\");\r\n        }\r\n        setMovieSelected(movieData);\r\n        /*============IF VIDEO NOT FOUND SHOW IMAGE===========*/\r\n        for (let i = 0; i < videoData.results.length; i++) {\r\n          if (\r\n            videoData.results[i].site === \"YouTube\" &&\r\n            videoData.results[i].type === \"Trailer\"\r\n          ) {\r\n            setVideoID(videoData.results[i].key);\r\n            break;\r\n          } else if (\r\n            videoData.results[i].site === \"YouTube\" &&\r\n            videoData.results[i].type === \"Teaser\"\r\n          ) {\r\n            setVideoID(videoData.results[i].key);\r\n            break;\r\n          } else {\r\n            setBackdropLink(\r\n              `${configData.images.base_url}${configData.images.backdrop_sizes[2]}${movieData.backdrop_path}`\r\n            );\r\n            break;\r\n          }\r\n        }\r\n        /*============IF DO NOT HAVE VIDEO THEN SHOW IMAGE===========*/\r\n        if (videoData.results.length === 0) {\r\n          setBackdropLink(\r\n            `${configData.images.base_url}${configData.images.backdrop_sizes[2]}${movieData.backdrop_path}`\r\n          );\r\n        }\r\n      } catch (e) {\r\n        console.log(e.messsage);\r\n      }\r\n    };\r\n    sendRequest(endPoint);\r\n    return () => {\r\n      setVideoID(\"\");\r\n      setBackdropLink(\"\");\r\n      setMovieSelected({});\r\n      setError(false);\r\n    };\r\n  }, [props.movieId]);\r\n  /*==========YOUTUBE SETTING=============*/\r\n  const opts = {\r\n    height: \"300\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  /*===========ROUND THE VOTE AVERAGE============*/\r\n  const voteAverage = Number(movieSelected.vote_average).toFixed(1);\r\n  return (\r\n    <div className={styles[\"movie-detail\"]}>\r\n      {/* SHOW ERROR */}\r\n      {error && (\r\n        <div className={styles.error}>\r\n          This movie not in database, please choose another movie\r\n        </div>\r\n      )}\r\n      {/* SHOW VIDEO AND INFOMATION */}\r\n      <div className={styles[\"movie-detail-info\"]}>\r\n        <h2>{movieSelected.original_title}</h2>\r\n        <p>Release Date: {movieSelected.release_date}</p>\r\n        <p>\r\n          Vote:&nbsp;\r\n          {movieSelected.vote_count}/{voteAverage}\r\n        </p>\r\n        <p className={styles.overview}>{movieSelected.overview}</p>\r\n      </div>\r\n      <div className={styles[\"movie-detail-video\"]}>\r\n        {backdropLink !== \"\" && <img src={backdropLink} alt=\"\" />}\r\n        {videoId !== \"\" && <YouTube videoId={videoId} opts={opts} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailOriginal;\r\n","import React, { useState } from \"react\";\r\nimport OriginalItem from \"./movie-item/OriginalItem\";\r\nimport MovieDetailOriginal from \"./MovieDetailOriginal\";\r\nimport styles from \"./OriginalList.module.css\";\r\n\r\nconst OriginalList = (props) => {\r\n  /*==========STATE OF SELECTED MOVIE=============*/\r\n  const [selecedtMovieId, setSelectedMovieId] = useState(0);\r\n  const [showMovieDetail, setShowMovieDetail] = useState(false);\r\n  /*=========COPY OBJECT==============*/\r\n  const a = { ...props.items };\r\n  const b = { ...a[props.categorie] };\r\n  const c = { ...b.results };\r\n  const d = { ...c };\r\n  let movieArray = [];\r\n  for (let i in d) {\r\n    if (i < 9) {\r\n      const e = { ...d[i] };\r\n      movieArray[i] = { ...e };\r\n    }\r\n  }\r\n  const bb = { ...a[\"fetchConfig\"] };\r\n  const cc = { ...bb.images };\r\n  const dd = { ...cc.backdrop_sizes };\r\n  /*===========IF CLICK OTHER MOVIE SHOW DETAIL OF OTHER MOVIE, IF CLICK MOVIE AGAIN CLOSE DETAIL BOX============*/\r\n  const getMovieId = (movieId) => {\r\n    if (movieId !== 0) {\r\n      setShowMovieDetail(true);\r\n      setSelectedMovieId(movieId);\r\n    }\r\n    if (movieId === selecedtMovieId) {\r\n      setShowMovieDetail(false);\r\n      setSelectedMovieId(0);\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles[\"movie-list-categorie\"]}>\r\n      <div className={styles[\"movie-list-items\"]}>\r\n        {/* SHOW MOVIE ITEM */}\r\n        {movieArray.map((x) => {\r\n          const p = { ...x };\r\n          return p.poster_path ? (\r\n            <OriginalItem\r\n              key={p.id}\r\n              item={p}\r\n              baseUrl={cc.base_url}\r\n              backdropSizes={dd[0]}\r\n              onGetMovieId={getMovieId}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </div>\r\n      {/* SHOW MOVIE DETAIL */}\r\n      {showMovieDetail && <MovieDetailOriginal movieId={selecedtMovieId} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OriginalList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./MovieList.module.css\";\r\nimport MoviesListCategories from \"./movies-list-categories/MoviesListCategories\";\r\nimport OriginalList from \"./original/OriginalList\";\r\n// =======SET BASE URL AND API KEY========\r\nconst baseUrl = \"https://api.themoviedb.org/3\";\r\nconst apiKey = \"748ac253470023678c66e35ea82c9bab\";\r\n\r\nconst MovieList = () => {\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  // =========SEND REQUESTS==========\r\n  useEffect(() => {\r\n    const endPoints = {\r\n      fetchTrending: `${baseUrl}/trending/all/week?api_key=${apiKey}&with_network=123`,\r\n      fetchNetflixOriginals: `${baseUrl}/discover/tv?api_key=${apiKey}&with_network=123`,\r\n      fetchTopRated: `${baseUrl}/movie/top_rated?api_key=${apiKey}&language=en-US`,\r\n      fetchActionMovies: `${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=28`,\r\n      fetchComedyMovies: `${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=35`,\r\n      fetchHorrorMovies: `${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=27`,\r\n      fetchRomanceMovies: `${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=10749`,\r\n      fetchDocumentaries: `${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=99`,\r\n      fetchConfig: `${baseUrl}/configuration?api_key=${apiKey}`,\r\n    };\r\n    const sendRequest = async (endPoints) => {\r\n      let dataObj = {};\r\n      try {\r\n        for (let key in endPoints) {\r\n          const response = await fetch(endPoints[key]);\r\n          const dataJson = await response.json();\r\n          // =========STORE ALL REQUEST IN OBJECTT==========\r\n          dataObj[key] = dataJson;\r\n        }\r\n        setData(dataObj);\r\n        setLoading(true);\r\n      } catch (e) {\r\n        console.log(e.messsage);\r\n      }\r\n    };\r\n    sendRequest(endPoints);\r\n  }, []);\r\n  return (\r\n    <div className={styles[\"movie-list\"]}>\r\n      {!loading && <div className={styles[\"loading\"]}>Loading...</div>}\r\n      <OriginalList items={data} categorie={\"fetchNetflixOriginals\"} />\r\n      <MoviesListCategories items={data} categorie={\"fetchTrending\"} />\r\n      <MoviesListCategories items={data} categorie={\"fetchTopRated\"} />\r\n      <MoviesListCategories items={data} categorie={\"fetchActionMovies\"} />\r\n      <MoviesListCategories items={data} categorie={\"fetchComedyMovies\"} />\r\n      <MoviesListCategories items={data} categorie={\"fetchHorrorMovies\"} />\r\n      <MoviesListCategories items={data} categorie={\"fetchRomanceMovies\"} />\r\n      <MoviesListCategories items={data} categorie={\"fetchDocumentaries\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./NavBar.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nlibrary.add(faSearch);\r\nconst NavBar = () => {\r\n  const navigate = useNavigate();\r\n  const [offset, setOffset] = useState(0);\r\n  const componentMounted = useRef(true); // SET STATE OF MOUNT COMPONENT\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (componentMounted.current) {\r\n        // IF COMPONENT IS MOUNTING\r\n        setOffset(window.scrollY); //GET Y OFFSET\r\n      }\r\n    });\r\n    return () => {\r\n      componentMounted.current = false; //IF COMPONENT UNMOUNT STOP SET STATE\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.navbar} ${\r\n        offset > 100 && styles[\"black-background\"]\r\n      }`}\r\n    >\r\n      <p\r\n        onClick={() => {\r\n          navigate(\"/\");\r\n        }}\r\n      >\r\n        Movie App\r\n      </p>\r\n      <FontAwesomeIcon\r\n        onClick={() => {\r\n          navigate(\"/search\");\r\n        }}\r\n        className={styles.icon}\r\n        icon={[\"fas\", \"search\"]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport Banner from \"../components/banner/Banner\";\nimport MovieList from \"../components/movie-list/MovieList\";\nimport NavBar from \"../components/nav-bar/NavBar\";\n\nfunction Browse() {\n  return (\n    <div className=\"app\">\n      <NavBar />\n      <Banner />\n      <MovieList />\n    </div>\n  );\n}\n\nexport default Browse;\n","import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport styles from \"./ResultMovieDetail.module.css\";\r\n\r\nconst ResultMovieDetail = (props) => {\r\n  /*===========STATE AND APIKEY============*/\r\n  const [videoId, setVideoID] = useState(\"\");\r\n  const [backdropLink, setBackdropLink] = useState(\"\");\r\n  const [movieSelected, setMovieSelected] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const baseUrl = \"https://api.themoviedb.org/3\";\r\n  const apiKey = \"748ac253470023678c66e35ea82c9bab\";\r\n  /*===========SEND REQUEST============*/\r\n  useEffect(() => {\r\n    const endPoint = `${baseUrl}/movie/${props.movieId}/videos?api_key=${apiKey}&`;\r\n    const sendRequest = async (endPoint) => {\r\n      try {\r\n        const response = await fetch(endPoint);\r\n        /*===========GET CONFIGURATION============*/\r\n        const response2 = await fetch(\r\n          \"https://api.themoviedb.org/3/configuration?api_key=748ac253470023678c66e35ea82c9bab\"\r\n        );\r\n        const response3 = await fetch(\r\n          `${baseUrl}/movie/${props.movieId}?api_key=${apiKey}&`\r\n        );\r\n        /*==========CHECK ERROR=============*/\r\n        if (!response.ok || !response2.ok || !response3) {\r\n          setError(true);\r\n          throw new Error(\"Error\");\r\n        }\r\n        const videoData = await response.json();\r\n        const configData = await response2.json();\r\n        const movieData = await response3.json();\r\n        /*==========CHECK BACKDROP IMAGE=============*/\r\n        if (!movieData.backdrop_path) {\r\n          setError(true);\r\n          throw new Error(\"image not found\");\r\n        }\r\n        setMovieSelected(movieData);\r\n        /*============IF VIDEO NOT FOUND SHOW IMAGE===========*/\r\n        for (let i = 0; i < videoData.results.length; i++) {\r\n          if (\r\n            videoData.results[i].site === \"YouTube\" &&\r\n            videoData.results[i].type === \"Trailer\"\r\n          ) {\r\n            setVideoID(videoData.results[i].key);\r\n            break;\r\n          } else if (\r\n            videoData.results[i].site === \"YouTube\" &&\r\n            videoData.results[i].type === \"Teaser\"\r\n          ) {\r\n            setVideoID(videoData.results[i].key);\r\n            break;\r\n          } else {\r\n            setBackdropLink(\r\n              `${configData.images.base_url}${configData.images.backdrop_sizes[2]}${movieData.backdrop_path}`\r\n            );\r\n            break;\r\n          }\r\n        }\r\n        /*============IF DO NOT HAVE VIDEO THEN SHOW IMAGE===========*/\r\n        if (videoData.results.length === 0) {\r\n          setBackdropLink(\r\n            `${configData.images.base_url}${configData.images.backdrop_sizes[2]}${movieData.backdrop_path}`\r\n          );\r\n        }\r\n      } catch (e) {\r\n        console.log(e.messsage);\r\n      }\r\n    };\r\n    sendRequest(endPoint);\r\n    return () => {\r\n      setVideoID(\"\");\r\n      setBackdropLink(\"\");\r\n      setMovieSelected({});\r\n      setError(false);\r\n    };\r\n  }, [props.movieId]);\r\n  /*==========YOUTUBE SETTING=============*/\r\n  const opts = {\r\n    height: \"300\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  /*===========ROUND THE VOTE AVERAGE============*/\r\n  const voteAverage = Number(movieSelected.vote_average).toFixed(1);\r\n  return (\r\n    <div className={styles[\"movie-detail\"]}>\r\n      {/* SHOW ERROR */}\r\n      {error && (\r\n        <div className={styles.error}>\r\n          This movie not in database, please choose another movie\r\n        </div>\r\n      )}\r\n      {/* SHOW VIDEO AND INFOMATION */}\r\n      <div className={styles[\"movie-detail-info\"]}>\r\n        <h2>{movieSelected.original_title}</h2>\r\n        <p>Release Date: {movieSelected.release_date}</p>\r\n        <p>\r\n          Vote:&nbsp;\r\n          {movieSelected.vote_count}/{voteAverage}\r\n        </p>\r\n        <p className={styles.overview}>{movieSelected.overview}</p>\r\n      </div>\r\n      <div className={styles[\"movie-detail-video\"]}>\r\n        {backdropLink !== \"\" && <img src={backdropLink} alt=\"\" />}\r\n        {videoId !== \"\" && <YouTube videoId={videoId} opts={opts} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultMovieDetail;\r\n","import React from \"react\";\r\nimport styles from \"./ResultItem.module.css\";\r\n\r\nconst ResultItem = (props) => {\r\n  /*===========GET BACKDROP IMAGE LINK============*/\r\n  const image = `${props.baseUrl}${props.backdropSizes}${props.item.poster_path}`;\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        // GET ID OF MOVIE WHEN CLICK\r\n        props.onGetMovieId(props.item.id);\r\n      }}\r\n      className={styles[\"movie-item\"]}\r\n    >\r\n      <img src={image} alt={props.title} />\r\n    </div>\r\n  );\r\n};\r\nexport default ResultItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MovieDetailOriginal from \"./ResultMovieDetail\";\r\nimport styles from \"./ResultList.module.css\";\r\nimport ResultItem from \"./movie-item/ResultItem\";\r\n\r\nconst ResultList = (props) => {\r\n  /*==========STATE OF SELECTED MOVIE=============*/\r\n  const [selecedtMovieId, setSelectedMovieId] = useState(0);\r\n  const [showMovieDetail, setShowMovieDetail] = useState(false);\r\n  const [movieData, setMovieData] = useState({});\r\n  const [baseUrl, setBaseUrl] = useState(\"\");\r\n  const [backdropSizes, setBackdropSizes] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  //==========SEND REQUEST===========\r\n  useEffect(() => {\r\n    const query = props.keyWord;\r\n    const endPoint = `https://api.themoviedb.org/3/search/movie?api_key=748ac253470023678c66e35ea82c9bab&query=${query}`;\r\n    const sendRequest = async (endPoint) => {\r\n      try {\r\n        const response = await fetch(endPoint);\r\n        const response2 = await fetch(\r\n          \"https://api.themoviedb.org/3/configuration?api_key=748ac253470023678c66e35ea82c9bab\"\r\n        );\r\n        const data = await response.json();\r\n        const configData = await response2.json();\r\n        if (data.results.length > 0) {\r\n          setMovieData(data);\r\n        }\r\n        setBaseUrl(configData.images.base_url);\r\n        setBackdropSizes(configData.images.backdrop_sizes[2]);\r\n        setLoading(true);\r\n      } catch (e) {\r\n        console.log(e.messsage);\r\n      }\r\n    };\r\n    sendRequest(endPoint);\r\n    return () => {\r\n      setMovieData({});\r\n      setLoading(false);\r\n    };\r\n  }, [props.keyWord]);\r\n  /*=========COPY OBJECT==============*/\r\n  const a = { ...movieData.results };\r\n  let movieArray = [];\r\n  for (let i in a) {\r\n    if (i < 20) {\r\n      const e = { ...a[i] };\r\n      movieArray[i] = { ...e };\r\n    }\r\n  }\r\n  /*===========IF CLICK OTHER MOVIE SHOW DETAIL OF OTHER MOVIE, IF CLICK MOVIE AGAIN CLOSE DETAIL BOX============*/\r\n  const getMovieId = (movieId) => {\r\n    if (movieId !== 0) {\r\n      setShowMovieDetail(true);\r\n      setSelectedMovieId(movieId);\r\n    }\r\n    if (movieId === selecedtMovieId) {\r\n      setShowMovieDetail(false);\r\n      setSelectedMovieId(0);\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles[\"movie-list-categorie\"]}>\r\n      {/* SHOW ERROR */}\r\n      {showMovieDetail && <MovieDetailOriginal movieId={selecedtMovieId} />}\r\n      <h3>Search Results</h3>\r\n      {/* SHOW LOADING */}\r\n      {!loading && <div className={styles[\"loading\"]}>Loading...</div>}\r\n      <div className={styles[\"movie-list-items\"]}>\r\n        {/* SHOW MOVIE ITEM */}\r\n        {movieArray.map((x) => {\r\n          const p = { ...x };\r\n          return p.poster_path ? (\r\n            <ResultItem\r\n              key={p.id}\r\n              item={p}\r\n              baseUrl={baseUrl}\r\n              backdropSizes={backdropSizes}\r\n              onGetMovieId={getMovieId}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultList;\r\n","import React, { useRef } from \"react\";\r\nimport styles from \"./SearchForm.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n// =========ADD ICON INTO LIBRARY==========\r\nlibrary.add(faSearch);\r\n\r\nconst SearchForm = (props) => {\r\n  const inputRef = useRef();\r\n  // =========SEND KEYWORD WHEN CLICK SEARCH BUTTON==========\r\n  const searchHandle = () => {\r\n    const query = inputRef.current.value;\r\n    props.onReceiveKeyWord(query);\r\n  };\r\n\r\n  const resetHandle = () => {\r\n    inputRef.current.value = \"\";\r\n  };\r\n  // ========SEND KEYWORD WHEN PRESS ENTER===========\r\n  const keyDownHandle = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      const query = inputRef.current.value;\r\n      props.onReceiveKeyWord(query);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div onKeyDown={keyDownHandle} className={styles.search}>\r\n      <div className={styles[\"search-form\"]}>\r\n        <input ref={inputRef} type=\"text\" placeholder=\"Search movie here\" />\r\n        <FontAwesomeIcon className={styles.icon} icon={[\"fas\", \"search\"]} />\r\n        <div className={styles.btn}>\r\n          <p onClick={resetHandle}>RESET</p>\r\n          <button onClick={searchHandle}>SEARCH</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState } from \"react\";\nimport NavBar from \"../components/nav-bar/NavBar\";\nimport ResultList from \"./result-list/ResultList\";\nimport SearchForm from \"./search-form/SearchForm\";\n\nconst Search = () => {\n  const [searchKey, setSearchKey] = useState({});\n  const getKeyWord = (key) => {\n    if (key) {\n      setSearchKey(key);\n    }\n  };\n  return (\n    <div className=\"app\">\n      <NavBar />\n      <SearchForm onReceiveKeyWord={getKeyWord} />\n      <ResultList keyWord={searchKey} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Browse from \"./pages/browse/Browse\";\nimport Search from \"./pages/search/Search\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Browse />} />\n        <Route path=\"/search\" element={<Search />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}